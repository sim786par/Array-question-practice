#include<bits/stdc++.h>
using namespace std;

class Array{               //creating a class of array
    public:                //public is used as access specifier so that all the elements of the array class is accessible in the main function
    int *a;
    int size;             
    int length;
    
    Array(int s){         //constructor
        size = s;
        a = new int[size];     //dynamically allocate an array in a heap
        length = 0;
    }
    void display(){                           //for printing the array
        cout<< "elements of array: \n";
        for(int i=0;i<length;i++){
            cout<<a[i] <<"  ";
        }
    }
    void insertElements(int n) {                                   //for inserting elements in a dynamically created array
        if (n > size) {                                             //if no of elements is greater than the size of the array the insertion can't be done
            cout << "Cannot insert, size exceeded!" << endl;
            return;
        }
        cout << "Enter " << n << " numbers:" << endl;
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }
        length = n;                                                //specifying the increased length of the array after insertion
    }
    
    ~Array(){                                                      //destructor de-allocating the memory of array so that memory leakage not happen
        delete[] a;
    }
};
int main(){                                                       //main function
    int n,size;
    cout << "enter size of array: ";
    cin >> size;
    Array arr(size);                                             //allocate memory dynamically inside the constructor (object instantiation)
    cout << "enter number of numbers: ";
    cin >> n;
    arr.insertElements(n);                                     //calling insertElement method
    arr.display();                                             //calling display method
    return 0;
}
